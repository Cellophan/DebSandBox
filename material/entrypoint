#!/bin/bash
set -Eeuo pipefail

stacktrace() { 
  echo "unhandled error. stacktrace:" 
   i=0 
   while caller $i; do 
     i=$((i+1)) 
   done 
}
trap "stacktrace" ERR 

[ ! -z "${DEBUG:-}" ] && set -vx

#Default value
: ${SHELL:="/bin/bash"}
export WORKDIR=$PWD
export SSH_AUTH_SOCK
export SSH_AUTH_SOCK
[ ! -z "${DEBUG:-}" ] && echo "SSH_AUTH_SOCK: $SSH_AUTH_SOCK"

#Create user
if [ -z "${USER:-}" -o -z "${UID:-}" -o -z "${GID:-}" ]; then
  USER=notme
  groupadd $USER
  useradd  $USER --gid $USER
else
  groupadd $USER --gid $GID
  useradd  $USER --gid $GID --uid $UID
fi

#Permit the user to use docker if the socket is mounted
if [ -S /var/run/docker.sock -a ! -z "$(which docker)" ]; then
  groupadd docker --gid $(stat --format='%g' /var/run/docker.sock)
  usermod -aG docker $USER

  export DOCKER_CONTAINER=$(cat /proc/self/cgroup | grep "docker" | sed s/\\//\\n/g | tail -1 | sed 's/^.*-\([a-fA-F0-9]*\)\..*$/\1/')
  export DOCKER_IMAGE=$(docker inspect -f '{{.Config.Image}}' ${DOCKER_CONTAINER})
  export DOCKER_IMAGE_FRESHNESS=$(expr \( $(date "+%s") - $(date -d "$(docker inspect -f '{{.Created}}' ${DOCKER_IMAGE} | cut -d\  -f1-3)" "+%s") \) )
fi

#Detect if the home directory is mounted
if [ ! -d /home/${USER} ]; then
  mkdir /home/${USER}
fi
if [ $(mount | grep "/home/${USER}" | wc -l) -ge 1 ]; then
  IS_HOME_MOUNTED=false
  chown ${USER} /home/${USER}
  [ ! -e /home/${USER}/.bashrc ] && cp /etc/skel/.bashrc /home/${USER}/ && chown ${USER} /home/${USER}/.bashrc
  [ ! $(mount | grep "/root/.bashrc" | wc -l) -ge 1 ] && cp /etc/skel/.bashrc /root/
else
  IS_HOME_MOUNTED=true
fi
export IS_HOME_MOUNTED

#Declare DISPLAY if the X socket is mounted
if [ -S /tmp/.X11-unix ]; then
  export DISPLAY=${DISPLAY:-:0}
fi

for i in /etc/profile.d/*.sh ; do
  if [ -r $i ]; then
    . $i
  fi
done
unset i

echo "$USER ALL = NOPASSWD: ALL" >/etc/sudoers.d/full-sudo
chmod 0440 /etc/sudoers.d/full-sudo

if [ $# -eq 0 ]; then
  exec su $USER --shell $SHELL
else
  exec su $USER <<EOF
$@
EOF

fi

