#!/bin/bash

. /lib/stacktrace.sh

[ ! -z "${DEBUG:-}" ] && set -vx

# Default value
: ${SHELL:="/bin/bash"}
: ${DEFAULT_CMD:=""}
: ${USER:="burner"}
: ${uid:=1001}
: ${GID:=1001}
[ $UID -ne 0 ] && uid=$UID
[ ${HOME:-/root} == "/root" ] && HOME="/home/${USER}"

WORKDIR=${PWD}
export WORKDIR SSH_AUTH_SOCK

groupadd ${USER} --gid ${GID}
useradd  ${USER} --gid ${USER} --uid ${uid} --home-dir ${HOME}

[ ! -z "${DEBUG:-}" ] && echo "docker binary: $(which docker)"
# Permit the user to use docker if the socket is mounted
if [ -S /var/run/docker.sock -a ! -z "$(which docker)" ]; then
	groupmod --gid $(stat --format='%g' /var/run/docker.sock) docker
	usermod -aG docker ${USER}

	docker version &>>/dev/null || return=$?
	[ ${return:-0} -eq 0 ] && export DOCKER_AVAILABLE=true
fi

#Assure that the home directory exists
if [ ! -d ${HOME} ]; then
	mkdir ${HOME}
fi
# Detect if the home directory is mounted
if [ $(mount | grep "${HOME} " | wc -l) -ne 1 ]; then
	IS_HOME_MOUNTED=false
	chown ${USER} ${HOME}

	# Import the files present in the skel directory
	for f in $(find /etc/skel -maxdepth 1 ! -path /etc/skel); do
		dst="${HOME}/$(basename $f)"
		if [ -r $f -a ! -e $dst ]; then
			cp -r $f $dst
			chown -R ${USER}. $dst
		fi
	done
else
	IS_HOME_MOUNTED=true
	echo "The home directory is mounted so the features depending on files in it are disabled." >&2
fi
export IS_HOME_MOUNTED

# Declare DISPLAY if the X socket is mounted
# xhost +<container ip> is needed on the host side.
if [ -S /tmp/.X11-unix ]; then
	export DISPLAY=${DISPLAY:-:0}
fi

# Declare TERM correctly
if [ -e /usr/share/terminfo/x/xterm-256color ]; then
	TERM='xterm-256color'
else
	TERM='xterm-color'
fi
export TERM

# Give root access to the everybody
echo "ALL ALL = NOPASSWD: ALL" >/etc/sudoers.d/full-sudo
chmod 0440 /etc/sudoers.d/full-sudo

# If there's a profile file, execute it.
for i in /etc/profile.d/*.sh ; do
	if [ -r $i ]; then
		. $i
	fi
done
unset i

# Propagate the PATH variable
echo -e "ENV_PATH ${PATH}\nENV_SUPATH ${PATH}" >> /etc/login.defs

# Is the first arg something to execute?
maybebin="${1:-}"
if [ ! -z "${maybebin}" -a "${maybebin}" == "${maybebin##*/}" -a ! -z "$(which ${maybebin##*/})" ]; then
	unset DEFAULT_CMD SHELL
fi

gosu ${USER} $(echo ${DEFAULT_CMD:-${SHELL:-}} ${@}) || return=$?
exit ${return:-0}

